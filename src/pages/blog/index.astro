---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { getLangFromUrl, useTranslations } from '../../i18n/utils';
import { languages } from '../../i18n/ui';

export function getStaticPaths() {
  return Object.keys(languages).map((lang) => ({ params: { lang } }));
}

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const posts = await getCollection('blog');
const sortedPosts = posts.sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf());
---

<Layout title="Blog - Polichain.xyz">
  <main class="min-h-screen bg-background">
    <div class="container mx-auto px-4 py-16">
      <h1 class="text-4xl md:text-6xl font-bold text-center mb-8 text-text">
        Blog
      </h1>
      
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mt-12">
        {sortedPosts.map((post) => (
          <article 
            class="bg-primary/50 rounded-lg overflow-hidden border border-accent/10 hover:border-accent/30 transition-all duration-300"
            data-aos="fade-up"
          >
            {post.data.image && (
              <img 
                src={post.data.image} 
                alt={post.data.title}
                class="w-full h-48 object-cover"
              />
            )}
            <div class="p-6">
              <h2 class="text-xl font-bold mb-2 text-text hover:text-accent transition-colors duration-300">
                <a href={`/${lang}/blog/${post.slug}`}>
                  {post.data.title}
                </a>
              </h2>
              <p class="text-text-muted mb-4 line-clamp-2">
                {post.data.description}
              </p>
              <div class="flex items-center justify-between">
                <div class="flex items-center space-x-2">
                  <time datetime={post.data.publishDate.toISOString()} class="text-sm text-text-muted">
                    {new Date(post.data.publishDate).toLocaleDateString(lang, {
                      year: 'numeric',
                      month: 'long',
                      day: 'numeric'
                    })}
                  </time>
                </div>
                <div class="flex flex-wrap gap-2">
                  {post.data.tags.map((tag) => (
                    <span class="text-xs px-2 py-1 bg-accent/10 text-accent rounded-full">
                      {tag}
                    </span>
                  ))}
                </div>
              </div>
            </div>
          </article>
        ))}
      </div>
    </div>
  </main>
</Layout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>